(()=>{"use strict";var e={420:(e,o,n)=>{n.d(o,{Z:()=>s});class t{debug=console.debug;log=console.log;warn=console.warn;info=console.info;error=console.error;trace=console.trace;group=console.group;groupCollapsed=console.groupCollapsed;groupEnd=console.groupEnd;constructor(e=null){const o=[];null!==e&&o.push(e.toString()),this.debug=console.debug.bind(console,...o),this.log=console.log.bind(console,...o),this.warn=console.warn.bind(console,...o),this.info=console.info.bind(console,...o),this.error=console.error.bind(console,...o),this.trace=console.trace.bind(console,...o),this.group=console.group.bind(console,...o),this.groupCollapsed=console.groupCollapsed.bind(console,...o)}}globalThis.Logger=t;const s=t}},o={};function n(t){var s=o[t];if(void 0!==s)return s.exports;var r=o[t]={exports:{}};return e[t](r,r.exports,n),r.exports}n.d=(e,o)=>{for(var t in o)n.o(o,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:o[t]})},n.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),(()=>{var e=n(420);const o=async function(){"complete"!==document.readyState&&await new Promise((e=>{window.addEventListener("load",(()=>{e(void 0)}),{once:!0})}))},t="https://cdn.jsdelivr.net/gh/medialize/sass.js@latest/dist/sass.sync.js",s=new e.Z("[SS]");s.log(`Loading Sass: ${t}`),async function(e){return new Promise(((n,t)=>{const s=document.createElement("script");s.src=e,s.addEventListener("load",(async()=>{await o(),n()})),s.addEventListener("error",(()=>{t()})),document.head.append(s)}))}(t).then(o).then((async()=>{const{Sass:e}=window;if(!e)throw new ReferenceError("Sass is not defined");const{compile:o}=e;if(!o)throw new ReferenceError("sass.compile is not defined");s.info("Loaded Sass. Starting to compile..."),await Array.from(document.getElementsByTagName("style")).filter((e=>/^text\/scss$/.test(e.getAttribute("type")))).concat(Array.from(document.getElementsByTagName("link")).filter((e=>/\.scss$/i.test(e.href)))).reduce((async(e,n,t,r)=>{await e,s.log(`Compiling ${t+1} / ${r.length}`);try{const e=n instanceof HTMLStyleElement?n.innerHTML:await async function(e){const o=await fetch(e,{method:"GET"});if(!o.ok)throw new ReferenceError(o.statusText);return o.text()}(n.href);await new Promise((t=>{o(e,(e=>{const{status:o}=e;if(0!==o){const{column:o,line:n,message:t}=e;throw new Error(`${t} @${n}:${o}`)}const{text:s}=e,r=document.createElement("style");r.innerText=s,n.replaceWith(r),t()}))})),s.info("Compiled")}catch(e){const{message:o}=e;s.warn(`Compiling failed: ${o}`)}}),Promise.resolve()),s.info("Compiled all styles")})).catch((e=>{const o=e?.message??"Not found";s.warn(`Loading Sass failed: ${o}`)})).finally((()=>{s.log("End of Sass")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,